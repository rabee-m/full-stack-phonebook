{"version":3,"sources":["Filter.js","PersonForm.js","Persons.js","services/persons.js","App.js","index.js"],"names":["Filter","_ref","newFilter","handleFilterChange","react_default","a","createElement","value","onChange","PersonForm","props","onSubmit","addEntry","newName","handleNameChange","newNumber","handleNumberChange","type","Persons","personsList","baseUrl","services_persons","axios","get","then","response","data","newPersonObject","post","id","delete","concat","updatedPerson","put","App","_useState","useState","_useState2","Object","slicedToArray","persons","setPersons","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","setNewFilter","useEffect","personService","personsData","deleteEntry","event","preventDefault","personToDelete","target","window","confirm","name","filter","p","person","toLowerCase","startsWith","map","i","key","number","onClick","src_Filter","src_PersonForm","some","windowMessage","find","changedPerson","src_Persons","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.0b7cf128.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\nconst Filter = ({newFilter, handleFilterChange}) => {\r\n\r\n    return (\r\n        <div>filter shown with\r\n        <input value = {newFilter}\r\n        onChange = {handleFilterChange}\r\n        />\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react';\r\n\r\nconst PersonForm = (props) => {\r\n    return (\r\n    <form onSubmit = {props.addEntry}>\r\n    <div>\r\n      name:\r\n      <input\r\n      value={props.newName}\r\n      onChange={props.handleNameChange}\r\n      />\r\n    </div>\r\n    <div>\r\n      number:\r\n      <input\r\n      value={props.newNumber}\r\n      onChange={props.handleNumberChange}\r\n      />\r\n    </div>\r\n    <div>\r\n      <button type=\"submit\">add</button>\r\n    </div>\r\n  </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react';\r\nconst Persons = ({personsList}) => {\r\n    return (\r\n        <ul>\r\n        {personsList}\r\n      </ul>\r\n    )\r\n}\r\n\r\nexport default Persons","import axios from \"axios\";\r\nconst baseUrl = 'http://localhost:3002/api/persons';\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst add = (newPersonObject) => {\r\n    const request = axios.post(baseUrl, newPersonObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (updatedPerson) => {\r\n    const request = axios.put(`${baseUrl}/${updatedPerson.id}`, updatedPerson);\r\n    return request.then(response => response.data)\r\n\r\n}\r\n\r\nconst deleteData = (id) => {\r\n    const request = axios.delete(baseUrl + `/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll, add, deleteData, update}","import { useEffect, useState } from 'react'\r\nimport Filter from './Filter'\r\nimport PersonForm from './PersonForm'\r\nimport Person from './Persons'\r\nimport React from 'react';\r\nimport personService from './services/persons'\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([])\r\n\r\n  const [newName, setNewName] = useState('')\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const[newNumber, setNewNumber] = useState('')\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const [newFilter, setNewFilter] = useState('')\r\n  const handleFilterChange = (event) => {\r\n    setNewFilter(event.target.value)\r\n  }\r\n  useEffect(() => {\r\n    personService\r\n      .getAll()\r\n      .then(personsData => {\r\n        setPersons(personsData)\r\n      })\r\n  }, [])\r\n\r\n  const addEntry = (event) => {\r\n    event.preventDefault()\r\n    const isDuplicate = persons.some((person) => newName === person.name )\r\n    if (isDuplicate) {\r\n      const windowMessage = `${newName} is already added to phonebook, replace the old number with a new one?`\r\n      if (window.confirm(windowMessage)) {\r\n        const updatedPerson = persons.find(p => p.name === newName)\r\n        updatedPerson.number = newNumber;\r\n        personService\r\n          .update(updatedPerson)\r\n          .then(changedPerson => {\r\n            setPersons(persons.map(p => p.id !== changedPerson.id ? p : changedPerson))\r\n          })\r\n\r\n      }\r\n    } else {\r\n      const newPersonObject = {name: newName, number: newNumber}\r\n      // setPersons(persons.concat(newPersonObject))\r\n      // setNewName('')\r\n      // setNewNumber('')\r\n      personService\r\n        .add(newPersonObject)\r\n        .then(personsData => {\r\n          setPersons(persons.concat(personsData))\r\n          setNewName('')\r\n          setNewNumber('')\r\n        })\r\n    }\r\n  }\r\n\r\n  const deleteEntry = (event) => {\r\n    event.preventDefault();\r\n    const personToDelete = persons[event.target.id]\r\n    if (window.confirm(`Delete ${personToDelete.name} ?`)) {\r\n      personService\r\n        .deleteData(personToDelete.id)\r\n        .then(personsData => {\r\n          setPersons(persons.filter(p => p.id !== personToDelete.id))\r\n        })\r\n    }\r\n  }\r\n\r\n  const personsToShow =  newFilter === ''\r\n  ? persons\r\n  :persons.filter(person => person.name.toLowerCase().startsWith(newFilter.toLowerCase()))\r\n  \r\n  const personsList = personsToShow.map((person, i) => <li key={i}>{person.name}: {person.number}\r\n  <button id={i} onClick={deleteEntry}> delete </button></li>)\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Filter newFilter={newFilter}  handleFilterChange={handleFilterChange}/>\r\n      <h2>Add New</h2>\r\n      <PersonForm addEntry={addEntry} newName={newName} handleNameChange={handleNameChange}\r\n       newNumber={newNumber} handleNumberChange={handleNumberChange}/>\r\n      <h2>Numbers</h2>\r\n      <Person personsList={personsList}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}